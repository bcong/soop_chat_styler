// ==UserScript==
// @name         SOOP(숲) - 채팅 스타일러
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  사용자가 채팅 환경을 자유롭게 커스터마이징할 수 있는 확장 프로그램입니다.
// @author       비콩
// @match        https://www.sooplive.co.kr/*
// @match        https://play.sooplive.co.kr/*
// @match        https://vod.sooplive.co.kr/player/*
// @grant        none
// @github       https://github.com/bcong
// @connect      sooplive.co.kr
// ==/UserScript==

(function() {
    'use strict';

    // 현재 URL에서 채널 ID 추출 (예: phonics1)
    const urlParts = window.location.pathname.split('/');
    const channelId = urlParts[1];  // 두 번째 부분이 채널 ID

    // 채팅 메시지를 담을 고정된 div 생성
    const fixedContainer = document.createElement('div');
    fixedContainer.style.position = 'fixed';
    fixedContainer.style.color = 'white';
    fixedContainer.style.zIndex = '9999'; // 다른 요소 위에 표시되도록 설정
    fixedContainer.style.width = '300px';
    fixedContainer.style.overflowX = 'hidden'; // 스크롤 가능하도록 설정
    fixedContainer.style.overflowY = 'hidden'; // 스크롤 가능하도록 설정
    fixedContainer.style.cursor = 'move'; // 드래그 가능 마우스 커서 표시

    document.body.appendChild(fixedContainer);

    // localStorage에서 해당 채널의 마지막 위치 가져오기
    const savedLeft = localStorage.getItem(`chatboxLeft_${channelId}`);
    const savedTop = localStorage.getItem(`chatboxTop_${channelId}`);

    if (savedLeft && savedTop) {
        fixedContainer.style.left = `${savedLeft}px`;
        fixedContainer.style.top = `${savedTop}px`;
    } else {
        // 기본 위치 설정 (없으면 좌측 상단)
        fixedContainer.style.left = '0px';
        fixedContainer.style.top = '0px';
    }

    // 제작자 메시지를 추가하는 함수
    function addMessage(textContent) {
        const authorMessageDiv = document.createElement('div');
        authorMessageDiv.textContent = textContent;
        authorMessageDiv.style.marginBottom = '5px';
        authorMessageDiv.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
        authorMessageDiv.style.borderRadius = '10px';
        authorMessageDiv.style.padding = '6px 8px';
        authorMessageDiv.style.fontSize = '14px';

        fixedContainer.appendChild(authorMessageDiv);
    }
    
    // 제작자 메시지 추가
    addMessage(`클라우드 채팅 (제작자 - 비콩)`);

    // 채팅 메시지를 업데이트하는 함수
    function updateChatMessages() {
        const chatArea = document.querySelector('#chat_area');
        if (!chatArea) return;

        const chatItems = chatArea.querySelectorAll('.chatting-list-item');
        const recentChats = Array.from(chatItems).slice(-10); // 최근 10개만 가져옴

        if (recentChats.length <= 1) return;

        // 기존 내용을 지우고 새로 추가
        fixedContainer.innerHTML = '';        

        recentChats.forEach(chat => {
            const username = chat.querySelector('.username .author')?.textContent || null;

            // 'start-message' 클래스를 가진 div가 있는지 확인
            const startMessageDiv = chat.querySelector('.start-message');

            if (startMessageDiv) {
                addMessage(`클라우드 채팅 (제작자 - 비콩)`);
            }

            if (!username) return;

            const messageText = chat.querySelector('.message-text .msg')?.textContent || '';

            addMessage(`${username}　${messageText}`);
        });

        // 스크롤을 맨 아래로 이동
        fixedContainer.scrollTop = fixedContainer.scrollHeight;
    }

    // 일정 시간마다 업데이트 (예: 2초마다)
    setInterval(updateChatMessages, 1);

    // 드래그 기능 구현
    let offsetX = 0, offsetY = 0, initialX = 0, initialY = 0, isDragging = false;

    // 마우스 버튼을 눌렀을 때 실행되는 함수
    function startDragging(e) {
        e.preventDefault();
        isDragging = true;
        initialX = e.clientX;
        initialY = e.clientY;
        offsetX = fixedContainer.offsetLeft;
        offsetY = fixedContainer.offsetTop;

        document.addEventListener('mousemove', dragElement);
        document.addEventListener('mouseup', stopDragging);
    }

    // 마우스를 움직일 때 실행되는 함수
    function dragElement(e) {
        if (!isDragging) return;

        const currentX = e.clientX - initialX;
        const currentY = e.clientY - initialY;

        const newLeft = offsetX + currentX;
        const newTop = offsetY + currentY;

        fixedContainer.style.left = `${newLeft}px`;
        fixedContainer.style.top = `${newTop}px`;

        // 위치 저장 (채널 ID에 따라 다르게 저장)
        localStorage.setItem(`chatboxLeft_${channelId}`, newLeft);
        localStorage.setItem(`chatboxTop_${channelId}`, newTop);
    }

    // 마우스 버튼을 놓았을 때 실행되는 함수
    function stopDragging() {
        isDragging = false;
        document.removeEventListener('mousemove', dragElement);
        document.removeEventListener('mouseup', stopDragging);
    }

    // 드래그 시작 이벤트 설정 (고정된 컨테이너에서 드래그 가능)
    fixedContainer.addEventListener('mousedown', startDragging);
})();